# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Ensure git is clean
    ensure_git_status_clean
    
    # Increment build number
    increment_build_number(xcodeproj: "Tona.xcodeproj")
    
    # Get the current version and build number
    version = get_version_number(xcodeproj: "Tona.xcodeproj")
    build = get_build_number(xcodeproj: "Tona.xcodeproj")
    
    # Build the app
    build_app(
      scheme: "Tona",
      export_method: "app-store",
      clean: true,
      output_directory: "./build",
      output_name: "Tona.ipa"
    )
    
    # Upload to TestFlight
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      apple_id: "ada.tona"
    )
    
    # Commit the version bump
    commit_version_bump(
      message: "Version Bump to #{version} (#{build})",
      xcodeproj: "Tona.xcodeproj"
    )
    
    # Add a git tag
    add_git_tag(
      tag: "v#{version}-#{build}"
    )
    
    # Push to remote
    push_to_git_remote
    
    # Send notification
    notification(subtitle: "Finished Building", message: "Version #{version} (#{build}) uploaded to TestFlight ðŸš€")
  end
  
  desc "Build the app without uploading"
  lane :build do
    # Build the app
    build_app(
      scheme: "Tona",
      export_method: "app-store",
      clean: true,
      output_directory: "./build",
      output_name: "Tona.ipa",
      skip_package_ipa: false,
      skip_archive: false
    )
    
    notification(subtitle: "Build Complete", message: "Tona.ipa has been built successfully ðŸ“¦")
  end
  
  desc "Run tests"
  lane :test do
    run_tests(
      scheme: "Tona",
      devices: ["iPhone 15"],
      clean: true
    )
  end
  
  desc "Create screenshots"
  lane :screenshots do
    capture_screenshots(
      scheme: "TonaUITests",
      clear_previous_screenshots: true
    )
  end
  
  desc "Release to App Store"
  lane :release do
    # Ensure git is clean
    ensure_git_status_clean
    
    # Run tests first
    test
    
    # Build and upload
    build_app(
      scheme: "Tona",
      export_method: "app-store",
      clean: true
    )
    
    upload_to_app_store(
      skip_metadata: false,
      skip_screenshots: false,
      submit_for_review: false
    )
    
    notification(subtitle: "Release Complete", message: "Successfully uploaded to App Store Connect ðŸŽ‰")
  end
end
